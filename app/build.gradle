plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.quectel.app.demo"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "2.0.0"
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        print("-----------value-----" + properties.userDomain)
        buildConfigField("String", "userDomain", "\"" + "${properties.userDomain}" + "\"")
        buildConfigField("String", "userScrete", "\"" + "${properties.userSecret}" + "\"")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    viewBinding { enabled = true }

    signingConfigs {
        debug {
            storeFile file("sdkdemokey.jks")
            storePassword "quec123456"
            keyAlias "quecdemo"
            keyPassword "quec123456"
        }
        release {
            storeFile file("sdkdemokey.jks")
            storePassword "quec123456"
            keyAlias "quecdemo"
            keyPassword "quec123456"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    applicationVariants.configureEach { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.configureEach {
                def apkName = "QuecSdkDemo-${defaultConfig.versionName}-" + ReleaseTime()
                outputFileName = apkName + ".apk"
            }
        }
    }
}

//定义时间
static def ReleaseTime() {
    return new Date().format("yyyyMMdd-HHmm", TimeZone.getTimeZone("GMT+8:00"))
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar", '*.aar'])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'

    implementation 'com.guolindev.permissionx:permissionx:1.6.4'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.airbnb.android:lottie:6.0.0'
    implementation 'io.github.razerdp:BasePopup:3.2.0'
    implementation 'io.github.cymchad:BaseRecyclerViewAdapterHelper:3.0.8'
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    //sdk核心库
    implementation 'com.quectel.app.sdk:quec-iot-sdk:2.0.0-beta.14-SNAPSHOT'

    //场景sdk
    implementation "com.quectel.app.sdk:quec-scene-sdk:2.14.0.004-SNAPSHOT"

    //自动化sdk
    implementation "com.quectel.app.sdk:quec-automate-sdk:2.14.0.004-SNAPSHOT"
}

allprojects {
    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
            //强制指定的版本

        }
    }
}

