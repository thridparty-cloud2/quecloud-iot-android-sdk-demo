plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.quectel.app.demo"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0.0"
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        print("-----------value-----" + properties.userDomain)
        buildConfigField("String", "userDomain", "\"" + "${properties.userDomain}" + "\"")
        buildConfigField("String", "userScrete", "\"" + "${properties.userSecret}" + "\"")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    viewBinding { enabled = true }

    signingConfigs {
        debug {
            storeFile file("sdkdemokey.jks")
            storePassword "quec123456"
            keyAlias "quecdemo"
            keyPassword "quec123456"
        }
        release {
            storeFile file("sdkdemokey.jks")
            storePassword "quec123456"
            keyAlias "quecdemo"
            keyPassword "quec123456"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar", '*.aar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation 'com.android.support:multidex:1.0.3'

    //必选引入的三方库
    implementation "polidea.rxandroidble2.quectel:rx-ble:1.18.1.fix1"
    implementation "com.polidea.rxandroidble2:dagger-library-shadow:1.18.1"
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rx2:replaying-share:2.2.0'
    implementation "com.jakewharton.rxrelay2:rxrelay:2.1.1"
    implementation "com.neovisionaries:nv-websocket-client:2.14"


    //sdk核心库
    // api project(":QuecIotSdk")
    implementation 'com.quectel.app.sdk:quec-iot-sdk:1.12.0'
}

allprojects {
    configurations.all {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
            //强制指定的版本

        }
    }
}

